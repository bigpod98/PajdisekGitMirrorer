apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: gitmirrorer-scaled-job
  namespace: gitmirrorer
spec:
  jobTargetRef:
    parallelism: 5                            # [max number of desired pods](https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#controlling-parallelism)
    completions: 1                            # [desired number of successfully finished pods](https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#controlling-parallelism)
    activeDeadlineSeconds: 600                #  Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer
    backoffLimit: 6                           # Specifies the number of retries before marking this job failed. Defaults to 6
    template:
      spec:
        containers:
        - name: gitmirrorer-timed
          image: ghcr.io/bigpod98/pajdisekgitmirrorer/pajdisekgitmirrorer.mirroringscaledworker:latest
          env:
            - name: RABBITMQ_HOSTNAME
              value: "rabbitmq.rabbitmq.svc.cluster.local"
            - name: RABBITMQ_USERNAME
              value: "gitmirrorer"
            - name: RABBITMQ_PASSWORD
              value: "Password"
            - name: RABBITMQ_QUEUE
              value: "gitmirrorer"
            - name: RABBITMQ_EXCHANGE
              value: "gitmirrorer"
  pollingInterval: 30                         # Optional. Default: 30 seconds
  successfulJobsHistoryLimit: 5               # Optional. Default: 100. How many completed jobs should be kept.
  failedJobsHistoryLimit: 5                   # Optional. Default: 100. How many failed jobs should be kept.
  maxReplicaCount: 100                        # Optional. Default: 100
  triggers:
  - type: rabbitmq
    metadata:
      host: amqp://rabbitmq.rabbitmq.svc.cluster.local:5672/
      protocol: amqp
      queueName: gitmirrorer
      mode: QueueLength
      value: "1"

